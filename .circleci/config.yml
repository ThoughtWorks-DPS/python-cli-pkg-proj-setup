---
version: 2.1

orbs:
  op: twdps/onepassword@1.0.0
  do: twdps/pipeline-events@0.1.0

# ================================================================= global configuration

globals:
  - &context twdps-core-labs-team

on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

on-tag-main: &on-tag-main
  branches:
    ignore: /.*/
  tags:
    only: /.*/

executors:
  python-builder:
    docker:
      - image: twdps/circleci-python-builder:stable

# ================================================================= commands

commands:

  set-credentials:
    parameters:
      environment:
        description: test or prod
        type: string
        default: test
    steps:
      - when:
          condition:
            equal: [ << parameters.environment >>, "test" ]
          steps:
            - run:
                name: set test.pypi access
                command: |
                  cat \<<EOF > ~/.pypirc
                  [testpypi]
                    username = __token__
                    password = ${PYPI_TEST_API_TOKEN} HATCH_INDEX_USER
                  EOF
      - when:
          condition:
            equal: [ << parameters.environment >>, "prod" ]
          steps:
            - run:
                name: set pypi access
                command: |
                  cat \<<EOF > ~/.pypirc
                  [pypi]
                    username = __token__
                    password = ${PYPI_API_TOKEN}
                  EOF

# ================================================================= jobs

jobs:

  static code analysis and unit tests:
    executor: python-builder
    steps:
      - checkout
      - setup_remote_docker
      - op/env:
          env-file: op.env
      - run:
          name: snyk credentials
          command: |
            snyk config set api=${SNYK_TOKEN}
            snyk config set org=twdps
      - run:
          name: lint
          command: hatch run lint
      - run:
          name: test
          command: hatch run test

  build package and publish test:
    executor: python-builder
    steps:
      - checkout
      - setup_remote_docker
      - op/env:
          env-file: op.env
      # - set-credentials:
      #     environment: test
      - run:
          name: Build
          command: hatch build
      - run:
          name: test publish to test.pypi
          environment:
            HATCH_INDEX_REPO: test  
            HATCH_INDEX_USER: __token__  
            HATCH_INDEX_AUTH: ${PYPI_TEST_API_TOKEN}  
          command: hatch publish
      - persist_to_workspace:
          root: .
          paths:
            - dist/

  publish:
    executor: python-builder
    steps:
      - checkout
      - setup_remote_docker
      # - op/env:
      #     env-file: op.env
      # - set-credentials:
      #     environment: prod
      # - attach_workspace:
      #     at: .
      # - run:
      #     name: upload to pypi
      #     command: python -m twine upload --repository pypi dist/*
      # - do/slack-webhook:
      #     message: circlecigen $CIRCLE_TAG release
      #     webhook-url: $LAB_EVENTS_CHANNEL_WEBHOOK

# ================================================================= workflows

workflows:
  version: 2

  python package pipeline:
    jobs:

      - static code analysis and unit tests:
          context: *context
          filters: *on-push-main

      - build package and publish test:
          context: *context
          requires:
            - static code analysis and unit tests
          filters: *on-push-main

      - publish:
          context: *context
          requires:
            - build package and publish test
          filters: *on-tag-main
